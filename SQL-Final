SQL
Structured Query Language
Server Name: Server\Instance
DML
Data Manipulation Language
data in tables

Types of Queries
	1. Select
	2. Insert
	3. Update
	4. Delete

Select
	Select Statements are used to view information.  
	Select * | Col 1, col 2, col3
		From Tablename
		join tablename
			on Primarykey = Secondarykey
		Where column <>= 'a result' -- can also use in to mean = to multiple results
		
		<Group By <Rows of same values> Having 'Description' = Value>
		Order By 'colname' (Desc)

Join or Inner Join
	Tables joined need to have a match of no results
		 ex. Select E.Lastname, E.Firstname, J.Description, J.Salary
		From Job J
		left Join Employee E
		on Jobid = J.id
		Where description = 'Asst. Supervisor'
		Order by Description

		Join -Union
		 

		 Variables
		 Declare @name nvarchar()/int;
		 Set @name = '';
		or
		Declare @name nvarchar()/int = ''

		Where Like clause
		 %= 0 or more characters
 		_:exactly 1 character

	Select statements can use many clauses and sql inputs to modify results
		SubSelects or SubQueries
			Using Parens ()... Select statements can be used to insert results into other statements.
			Subselects must look for a single result to be inputed.
	Functions
		Right(1,1) last char
		Left(1,1) first char
		DataLength()
		Concat()
		Count()
		Sum()
		Avg()
		Concat()
		Format()
		GetDate()
		Distinct
		Replace ( , )

Maintaining the database

Insert
	Ususally only insert for 1 row into 1 table
	ex.
	Insert into Job
	(Salary, Description)
	values (SalaryValue, 'Descriptionvalue');
Update
	Update Tablename Set
		Colname = value, 
		Colname = Value,...
		Where <boolean-expression>

Delete
ex. 
Delete from Tablename Where <condition>
Deletes entire rows
ex.  


Transaction
one or more statements ususally update statements to do one 
or more statements that you want either all to work or none to work.
Begin Transaction
<Maintenance work on tables>
Rollback
or
Commit


Procedure
Create Procedure
AS
Begin
	<Command You want done>
End


Ex Creating a procedure to google search the tables joined 
Create Procedure EJListSearch
	@search nvarchar(30)
as
Begin
	Set @Search =Concat('%', @search, '%');
	Select Concat(Lastname, ', ', Firstname) 'Name', Description 'Job', Format(Salary, 'c') Salary
	From Employee
	join Job
	on Jobid = Job.id
	Where Lastname Like @search or Firstname Like @search or Job.Description like @search
	Order by Lastname; 
End

Ex Procedure looking at LT or GT salaries

Create Procedure SalaryLTGT @lowsalary int, @highsalary int
As
Begin
	
	Select Concat(E.Lastname, ', ', E.Firstname) Name, Description, Format(Salary, 'c') Salary
	from employee e
	join job j
	on e.jobid = j.id
	Where Salary >= @lowsalary and salary <= @highsalary
	Order by name;
End
go
exec SalaryLTGT 100000, 130000;
go


ex. Procedure to insert employee

Create Procedure [dbo].[InsEmployee]
	@Firstname nvarchar(30), @Lastname nvarchar(30), @Job nvarchar(30)
as
Begin
	Declare @JobID int;
	
	Select @jobid = id from job where description = @Job;

	Insert into employee
	(Firstname, Lastname, Jobid)
	Values (@Firstname, @Lastname, @Jobid)
end
Go
Exec InsEmployee @firstname ='Peter', @Lastname = 'Parker', @job = 'Director'

IF <Boolean Expression> Then
"If TRUE Then"
Begin
End
"If FALSE Then"
Begin
End

While <Boolean Expression>
True
Begin
end <REPEATING>


DDL
Data Definition Language
Data outside tables
Keywords:
Create - insert
Alter -update
Drop - delete

Creating tables and Dbs
--CREATE DATABASE BootCampDb;
Create Table Students (
	Id int not null primary key identity(1, 1)
	Firstname nvarchar(30) Not null,
	Lastname nvarchar(50) Not null,
	Email Nvarchar(255) null,
	Phone Nvarchar(15),
	DateEnrolled DateTime not null default getdate()
		
);
Alter Table Customers
	add Code Nvarchar(4) null;
Creating a unique column that's not primary key
 Unique- identifier

Insert into students (Firstname, Lastname) Values ('Alex', 'Chan');
Insert into students (Firstname, Lastname) Values ('Brailee', 'Begley');
Insert into students (Firstname, Lastname) Values ('Briana', 'Presley');
Insert into students (Firstname, Lastname) Values ('Glenn', 'Lindmark');
Insert into students (Firstname, Lastname) Values ('Jesse', 'Kyle');
Insert into students (Firstname, Lastname) Values ('Maggie', 'Schutzman');
Insert into students (Firstname, Lastname) Values ('Titus', 'Moore');
Insert into students (Firstname, Lastname) Values ('Marianne', 'Linardos');
Insert into students (Firstname, Lastname) Values ('Greg', 'Doud');

Column Definition-
	Name 
	Type (Nvarchar, int , bit = boolean(0, 1), DateTime('2019-07-19 10:03:21')) Nvarchar can contain (Max)
	Name &Type required for every table
	Nullable - not null (Defaut = yes)

/* anything inside is comment */
A Lot more  CONSTRAINTS can be placed on column definition.

--View
A Query stored in the database with a given name

Create View Name As
Select...



Creating indexed in SSMS can make looking thing up by indexed column ery fast its also the way to make a column unique 

BOOLEAN in SQL Studio is Bit , 0 or 1 


Script table as to the Query Window

rt click script table tooo Can Create the SQL Statements to creating the table and keep as documentation
